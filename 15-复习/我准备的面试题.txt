001，Promise原理（**）？  
	答：看代码，参考：https://juejin.im/post/5b2f02cd5188252b937548ab
	
002，then可以链式调用，多个then时，如果走到下一个then的失败回调？
	答：1，返回一个失败的promse  2，抛出一个错误

003，then可以链式调用，多个then时，如何终止下一个then的调用？
	答：返回一个处于pending状态的promise
	
004，js的异步解决方案有哪些(**)？
	答：回调函数（node，嵌套，err）。
		Promise。
		Generator+co。 co可以解决promise嵌套问题。generator+promise(promise嵌套问题)
		async+await  是Generator的语法糖
		
005，把一个伪数组变成真实的数组？
	 答：[...obj]  Array.from  [].slice.call(obj)
	     [...obj]需要保证obj是可迭代 
		 Array.from不需要保证obj是否可迭代，内部会使它可迭代
		 
006，使用过ES6中的哪些新语法（** 熟练使用ES语法）？
	答：解构赋值  [] {} 
		展开运算会   考察深copy  浅copy  
			copy:... slice JSON.parse(JSON.strinfy(obj));
		Map : 里面存储唯一的值 
		WeakMap
		Set
		ES6中的模块化 
		箭头函数 
		装饰器 
		模板字符串
		数组中一堆方法  reduce  map  filter  some  every.....
		对象中一堆方法  Object.key()  Object.defindproty   Objct.value    Objtct.xxxx
		类，继承    构造器   原型链
		Proxy  ---- defindprototy   
		Symbol
		
007，求数组的交集、并集、差集？
	答：看代码 

008，实现深copy？
	答：先自己实现。
		简单的，也有复杂。
	
009，ES6中的模块化？
	答：export导出 import导入 
	
010，模块化的发展流程？
	答：CommonJS的模块化
	
011，ES5和ES6是如何实现继承的？
	答：ES5中使用的是原型链模拟出来的继承
		ES6中的class也是语法糖

012，JS中call的原理？	
	 答：看代码 

013，JS中bind的原理？
	 答：看代码总结

014，JS中new的原理？（new做了什么？）
     答：看代码总结

015，JS中原型和原型链？
      总结 

016，执行上下文，执行上下文栈？

017，JS中的作用域？

018，闭包？

019，事件环？ 宏任务与微任务？

020，前端鉴权方案？

021，Vue中都有哪些常用的指令？
	v-text 
	v-html
	v-once
	v-for ***  key   template
	v-if 
	v-else 
	v-bind 
	v-show 
	v-model   修饰符
	v-on   修饰符   @
	....

022，Vue中双向数据绑定的原理？v-model的原理？

023，v-if和v-show有什么区别？
	v-if 针对是dom元素是否显示   有还是没有dom 
	v-show 针对的是style    有dom  display 

024，说一下，你对MVVM的理解？

025，VUE中数据通信有哪些方式？

026，在vue中data中可以放哪些类型的数据，放在data中的哪些数据可以响应式变化？

027，vue中是如何实现数据侦测的？
		1,只有放在data中的数据才能被侦测,新添加的属性不能更新视图
		2,defindprototy只能侦测一个对象，不能侦测数组
		3,递归侦测多层，如果赋值一个新的对象，也会侦测到
		3,vue中也可以侦测一个数组,如果是一个数组，添加一个元素，也会侦测到
		5,如果数组中有一个对象，也能被侦测到
		6,如果给数组新添加一个对象，这个对象也能被侦测到，数组套了对象，里面的对象也支持响应式变化，如果数组里面放了字面量，不能更新视图
		7,修改数组的长度，也会影响视图的更新

028，vue中数据侦测是如何侦测到数组中的常用方法（push,pop,shift...）?
	答：重写这些方法

029，vue中数据通信的方式？
	答：Props传递数据 父传子
	    $emit触发方式时携带数据  子中触发父中的方法 触发时给这个方法传递数据 
	   	      .sync(xxx  update:xxx)    v-model(value  input)
	   $parent,$children 默认只能触发上一级的方法  $parent可以触发上上级方法
	   $attrs,$listeners  $attrs 保存了父传递子的所有的属性   $listeners保存了父传递给子的所有的方法 
	   Provide和Inject  在父组件中提供数据，子组件和孙组件就可以使用了
	   		不推荐使用   Context 
			在使用数据时，一级一级向上找，如果找到就使用了，不再向上找了
	   Ref  获取真实的DOM元素，调用这个元素上的方法
	   	   在父中可以直接得到子组件，直接调用子组件中的方法
	   EventBus 事件总线  通过$on绑定事件  先在事件中心中注册一些事件   在合适的位置就可以通过$emit去发布

030，v-model是本质是？
	<Son2 :value="counter" @input="newValue=>counter = newValue"></Son2>
	<Son2 v-model="counter"></Son2>

031，说一下vue中的生命周期？
	答：beforeCeate  实例化vue后，走的第一个钩子，此时还没有数据劫持
	    created  vue实例已经创建完成，数据侦测OK，methods,computed也OK了，$el不OK
		beforeMount  挂载之前  
		mounted  $el OK     
		beforeUpdate  data改变了  准备渲染视图   domdiff 
		updated  渲染视图完毕   不要去修改data,可能死循环 
		beforeDestroy  vm销毁之前调用 
		destroyed  销毁之后调用 

032，在vue的钩子，通常会做哪些事情？
	答：created  vm已创建完成  发起ajax请求 
	    mounted  vm已挂载完成   发起ajax请求   操作dom 
		beforeUpdate   再近一步去修改状态  不会重新渲染
		updated  不能修改数据 
		beforeDestroy  优化操作，清空定时器，解除事件绑定

033，vue的生命周期具体适合哪些场景？画出vue的生命周期？

034，vue实例上的属性？
    vm.$data 
	vm.$options
	vm.$nextTick
	vm.$el  获取到真实的dom  获取到的可能不是更新后的  需要在下一下事件环中获取更新后的dom元素 
	vm.$watch  监控一个数据 
	vm.$set 
	vm.$delete 
	.... 

035，为什么通常不使用index作为key?

036，vue中的computed,watch,methods的区别？
	computed 和 methods的区别？ 
		缓存   
	computed 和 watch 区别？ 
	博客上面











































	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
Promise掌握程度：
	1，至少要会使用，会then的链式调用，会Promise中的方法的使用
	2，至少能实现Promise中的基本then方法，三个状态，异步，链式可以不用实现
