提问：
    1，说一个从浏览器的地址栏输入url到页面显示，经历了哪些过程？
        DNS解析--->找到服务器--->建立连接--->http请求--->http响应--->浏览器解析渲染--->断开连接
    
    2，浏览器构架图？浏览器是多进程的吗？渲染引擎中主要有什么东西？
        进程（工厂）：当一个项目运行起来后，就会形成一个进程。进程是操作系统分配和调度资源的基本单位。
        线程（工人）：在一进程下面有N个线程，真正干活的是线程。
        协程（轻量级的线程）
        浏览器是多进程：通过一个浏览器，可以同时访问多个网站，一个网站挂了，不会影响其它网站。
    
        浏览器的内核：渲染引擎（CSS线程-->解析CSS，形成CSS树，HTML线程-->解析HTML，形成DOM树，JS线程）

        JS线程和CSS线程是互斥

    3，浏览器想要把一张没有js页面渲染出来，它是如何渲染的？

    5，说一下什么是http协议？（简单说一下，后面会详细讲）
        HyperText Transfer Protocol
        超文本（文字，样式，程序，连接，视频，音频...） 
        传输（客户端与服务器之间的数据交流） 
        协议（规则，学习http，就是学习这个规则，规则里面有很多头）

        还需要说一个各种头...

        HTTP协议是基于TCP协议。

    6，三次握手和四次挥手是发生什么时候？为什么握手是三次，挥手是四次？
        三次握手： 
        四次挥手：

    7，写html标签时，应该注意什么？
        不区分大小写，建议小写  
        单标签最好加关闭    <br />  
        双标签要正确嵌套，不要交叉    <h1><p></h1></p>
        双标签要正确关闭  <li><li>

    8，常用的发起http请求的方式有哪些？
        get:从服务器获取数据
        post:向服务器提交数据

--------------------------------------

CSS：Cascading Style Sheet 层叠样式表
作用：布局  美化  不管是布局还是美化，都是针对标签，需要选中某个标签，然后进行布局或美化。

CSS代码写的位置：
    开始标签里面:<div style="color: red;">div</div>  用的不多
    head标签里面：在head标签中写style标签，把css代码写在style标签中  基本不用
    外面：在外面建一个out.css文件，通过link标签引入就OK了。最最常用

选择器：用于选中某个标签。
    id   先给一个标签起一个名字，通过#idname来选中
    class
    p
    div p 
    h1,h2
    :hover
    *

传统写CSS的方法，没有什么规则，就一个劲往后写就OK了。没有一点约束，后期维护不方便。
现在主流写CSS会使用CSS预处理器。作用：就是让我们写CSS更加的简单，更加的规范，更加的好维护。

常用的CSS处理器：less、sass、stylus

图的标注：PS，像素大厨

对于字体的设置，是有继承性，也就是你对父标签设置了字体，那么子标签，也是继承这个属性。
对于继承生，a标签比较特殊，如果你要设置a标签的颜色，那么你需要定位到a标签。

快速格式化代码：alt+shift+f

总结：
    color：设置字体的颜色
    font-size：设置字体的大小
    font-weight：设置字体的粗细
    font-style：设置字体的是否倾斜
    font-family:设置什么类型的字体
    font:前面几个属性的复合属性
    -------------
    text-decoration:修饰钱
    text-indent:首行空两格
    text-align:文本的对齐方式
    line-height:行高

    上面的属性是具有继承性的。

盒子模型：
    相当重要。
    标签是矩形的，这个矩形的标签就是一个盒子，也就是说，我们一张网页，就是一个一个盒子堆起来。

    学习盒子模型也就是说需要学习几个属性，来设置这个盒子模型
    width 盒子内容宽度
    height 盒子内容高度
    padding  盒子的内边距（补白），盒子内容与盒子边框之间的距离，上下左右都有padding
    margin   盒子的外边距  盒子边框之外的距离，也分上右下左
    border 盒子的边框  盒子的边框也是有上边框，右边框，下边框，左边框
    background  盒子背景  背景默认情况下会填充内容和padding

对于盒子模型的注意点：
    1，对于女标签来说，width和height设置无效
    2，width属性默认值为auto，块元素的贪婪性和行内元素的懒惰性。
    3，对于行内元素而言，其宽度有内容本身决定，而其高度则有font-size决定。
    4，有些标签有默认的padding值，如ul、ol等。*{padding:0}
    其它盒子模型中的细节，下午说。

男标签：可以设置盒子模型的6大属性。

总结上午的内容：
    1，CSS     选择器   一堆的CSS属性
    2，关于字体和文本的属性   继承性
    3，less  ----> 至少我们现在要知道less可以嵌套着写css代码
    4，less环境   less.js   
    5，盒子模型

    任务：消化，像素大厨

CSS调试面板：
    查看样式：样式分成了好几块
        第一块：不用管
        第二块：针对div写的独有样式，可以通过打勾与否让写是否起作用
        第三块：user agent stylesheet  标签的默认样式
        第四块：inherited from xx  继承的属性 
        在查看面板中，如果一个属性上面有个删除线，表示这个属性不起作用
    
    修改样式（临时性）：
        数值值是数字
        颜色：单词，颜色面板，十六进制
        字符串
    
    让某个样式是否起作用
        打勾
        我们自己写的样式的优先级是高于继承过来的样式的

选择器（60多个）：
    p 
    class 
    id 
    div p 
    h1,h2 
    :hover 暂时就在a标签上使用  当鼠标放上去的时候选中
    *  选中所有的标签   *{margin:0; padding:0;}
    div.box  交集选择器

选择器优先级（层叠性）：
    1： 自已写的 > 继承过来的
    2： 行内 > 内部    行内 > 外部   内部和外部的优先级一样（就近原则，内部和外部的选择器是一样的）
        行内 > 内部=外部（就近原则，选择器要一致）> 默认的
    3： ID > class > div 
    4： 权重  ID：0100    class: 0010    div: 0001  哪个钱多就用哪个
    5:  important 

CSS的两大特性：层叠性，继承性

有些标签有默认的样式，这些样式很多我们不需要，我们需要给它重置，一般叫reset，网上有
很多的reset.css。

有些常用的样式，我们会写到commont.css中，用的时候，直接使用commont.css中的类就OK了。

盒子模型(布局，美化)：  
    六大属性来调整盒子模型

margin:盒子与盒子之间的距离  分上，下，左，右四个方向的margin
    1个值  2个值  3个值  4个值
    有些标签有默认的margin   *{margin:0}   *可以有人不会用  
    margin-top   margin-right  margin-bottom  margin-left 
    应用：*{margin:0}   水平居中  网站顶部背景100%宽  版心最新版居中

border:设置盒子的边框  
    border:粗细 线型 颜色   border:1px solid red;
    border-top   border-right  border-bottom   border-left  
    border-width   border-style   border-color
    border-top-width  xxx  
    border在页面是占空间的

padding:
    内边距，补白   内容与border之间的距离
    有些标签有默认的padding   *{padding:0;}
    1个值  2个值  3个值  4个值
    应用：调整内容与border之间的间隙  
    padding在页面是占空间的

content:　内容的宽度和高度
    width:
    height：
    男标签可以设置宽度和高度，女标签不能设置宽度和高度
    女标签它的宽度由内容决定，高度由font-size决定 
    width和height可以设置百分比，是父元素的百分比。

background:
    background-color:
    background-image:

流式布局（标准文档流）：默认布局方案  不给力
    从上向下，从左到右进行布局
    男盒子独占一行，女盒子并排显示，女盒如果一行撑满了，自动换行。
    国家：规定

浮动布局：让男标签可以并排显示
    如果一个元素浮动了，就相当于这个元素出国，对就产生很我影响
    影响1：元素出国了，父元素里面就相当于没有内容，它的高度就变成0了，也就父元素高度塌陷了。元素浮动会造成父元素的高度塌陷。
           可以清楚这个影响：overflow:hidden;  overflow本意就是处理溢出，我们可以使用overflow的这个小偏方，消除父元素的塌陷。
    如果一个元素浮动了，那么这个元素内部还是按流式布局进行布局（内部也是一个标准文档流）。

小间隙有如下几种处理办法：
    1，加margin-left  可以给里面的li加，也可以给nav加
    2，加空格  &nbsp;
    3，加padding 可以给nav加  能不能给li加padding　？　


